pipeline {    agent {        dockerfile {            filename 'Dockerfile'            additionalBuildArgs '--target build'            dir '.'            args '-v /var/run/docker.sock:/var/run/docker.sock -v $SSH_AUTH_SOCK:/ssh-agent --env SSH_AUTH_SOCK=/ssh-agent'        }    }    environment {        PROJECT_NAME = 'violet'    }    stages {        stage('Build') {            steps {                withCredentials([string(credentialsId: 'doAccessToken', variable: 'DIGITALOCEAN_ACCESS_TOKEN')]) {                    dir(path: 'Frontend') {                        sh '''                            echo "Static Compilation..."                            ln -s /build/node_modules ./node_modules && npm run-script build                            echo "Packing to transfer container..."                            docker build -t registry.digitalocean.com/oz9aud6dhsxd/${PROJECT_NAME}:${BUILD_NUMBER} -f ./infrastructure/nginx/Dockerfile .                            echo "Pushing to registry..."                            doctl auth init && doctl registry login && docker push registry.digitalocean.com/oz9aud6dhsxd/${PROJECT_NAME}:${BUILD_NUMBER}                        '''                    }                }            }        }        stage('Deploy') {            steps {                build job: 'Deployment', parameters: [                    string(name: 'APP_NAME', value: String.valueOf(PROJECT_NAME)),                    string(name: 'APP_VERSION', value: String.valueOf(BUILD_NUMBER))                ]            }        }    }}